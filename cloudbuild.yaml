steps:
  # 0. Docker Build
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--no-cache'
      - '-t'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - .
      - '-f'
      - Dockerfile
    id: Build

  # 1. Docker push to Google Artifact Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
    id: Push

  # 2. Check Cloud SQL connectivity
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        gcloud sql instances describe ${_DB_INSTANCE} --format='value(ipAddresses.ipAddress)'
    id: ping db

  # 3. Check and report on migration status
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'sh'
      - '-c'
      - |
        python manage.py makemigrations --check 2>&1 || echo "Changes detected via --check, migrations needed."
    id: Check migrations

  # 4. Remove any existing migration files
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'sh'
      - '-c'
      - |
        find . -path "*/migrations/[0-9]*.py" -delete
        find . -path "*/migrations/[0-9]*.pyc" -delete
    id: Remove specific migrations

  # 4. create a new migration
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'migrate'
    id: Create migrations

  # 5. Make migrations
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'makemigrations'
      - '--noinput'
    id: Make migrations

  # 6. Migrate again
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'migrate'
    id: Migrate


  # 7. Collect static
  - name: gcr.io/google-appengine/exec-wrapper
    args:
      - '-i'
      - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - '-s'
      - '${PROJECT_ID}:${_DEPLOY_REGION}:${_DB_INSTANCE}'
      - '-e'
      - 'SETTINGS_NAME=${_SECRET_SETTINGS_NAME}'
      - '--'
      - 'python'
      - 'manage.py'
      - 'collectstatic'
      - '--no-input'
    id: Collect static

  # 8. Deploy to Cloud Run
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    args:
      - run
      - services
      - update
      - $_SERVICE_NAME
      - '--platform=managed'
      - '--image=$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'
      - >-
        --labels=managed-by=gcp-cloud-build-deploy-cloud-run,commit-sha=$COMMIT_SHA,gcb-build-id=$BUILD_ID,gcb-trigger-id=$_TRIGGER_ID,$_LABELS
      - '--region=$_DEPLOY_REGION'
      - '--quiet'
    id: Deploy
    entrypoint: gcloud



# Store images in Google Artifact Registry
images:
  - '$_AR_HOSTNAME/$PROJECT_ID/$REPO_NAME/$_SERVICE_NAME:$COMMIT_SHA'

# define where logs should be stored
# you can also have them sent to a bucket
options:
  logging: CLOUD_LOGGING_ONLY

tags:
  - gcp-cloud-build-deploy-cloud-run
  - gcp-cloud-build-deploy-cloud-run-managed
  - kp-run
